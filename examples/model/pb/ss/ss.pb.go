// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ss.proto

package ss

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// client  <-> server  10000 - 19999
type MessageCmd int32

const (
	MessageCmd_NULL  MessageCmd = 0
	MessageCmd_Login MessageCmd = 1
)

var MessageCmd_name = map[int32]string{
	0: "NULL",
	1: "Login",
}

var MessageCmd_value = map[string]int32{
	"NULL":  0,
	"Login": 1,
}

func (x MessageCmd) String() string {
	return proto.EnumName(MessageCmd_name, int32(x))
}

func (MessageCmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dc711c54c28c22d7, []int{0}
}

type ErrorCode int32

const (
	ErrorCode_OK ErrorCode = 0
)

var ErrorCode_name = map[int32]string{
	0: "OK",
}

var ErrorCode_value = map[string]int32{
	"OK": 0,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dc711c54c28c22d7, []int{1}
}

type Header struct {
	Cmd                  string   `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Uid                  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	MsgType              int32    `protobuf:"varint,3,opt,name=msgType,proto3" json:"msgType,omitempty"`
	Seq                  int32    `protobuf:"varint,4,opt,name=seq,proto3" json:"seq,omitempty"`
	Userdata             int32    `protobuf:"varint,5,opt,name=userdata,proto3" json:"userdata,omitempty"`
	Payload              []byte   `protobuf:"bytes,11,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc711c54c28c22d7, []int{0}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *Header) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Header) GetMsgType() int32 {
	if m != nil {
		return m.MsgType
	}
	return 0
}

func (m *Header) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Header) GetUserdata() int32 {
	if m != nil {
		return m.Userdata
	}
	return 0
}

func (m *Header) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type LoginReq struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Passwd               string   `protobuf:"bytes,2,opt,name=passwd,proto3" json:"passwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginReq) Reset()         { *m = LoginReq{} }
func (m *LoginReq) String() string { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()    {}
func (*LoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc711c54c28c22d7, []int{1}
}

func (m *LoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginReq.Unmarshal(m, b)
}
func (m *LoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginReq.Marshal(b, m, deterministic)
}
func (m *LoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginReq.Merge(m, src)
}
func (m *LoginReq) XXX_Size() int {
	return xxx_messageInfo_LoginReq.Size(m)
}
func (m *LoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_LoginReq proto.InternalMessageInfo

func (m *LoginReq) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *LoginReq) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type Result struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc711c54c28c22d7, []int{2}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Result) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LoginResp struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Uid                  string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResp) Reset()         { *m = LoginResp{} }
func (m *LoginResp) String() string { return proto.CompactTextString(m) }
func (*LoginResp) ProtoMessage()    {}
func (*LoginResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc711c54c28c22d7, []int{3}
}

func (m *LoginResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResp.Unmarshal(m, b)
}
func (m *LoginResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResp.Marshal(b, m, deterministic)
}
func (m *LoginResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResp.Merge(m, src)
}
func (m *LoginResp) XXX_Size() int {
	return xxx_messageInfo_LoginResp.Size(m)
}
func (m *LoginResp) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResp.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResp proto.InternalMessageInfo

func (m *LoginResp) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *LoginResp) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *LoginResp) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *LoginResp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("ss.MessageCmd", MessageCmd_name, MessageCmd_value)
	proto.RegisterEnum("ss.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterType((*Header)(nil), "ss.Header")
	proto.RegisterType((*LoginReq)(nil), "ss.LoginReq")
	proto.RegisterType((*Result)(nil), "ss.Result")
	proto.RegisterType((*LoginResp)(nil), "ss.LoginResp")
}

func init() { proto.RegisterFile("ss.proto", fileDescriptor_dc711c54c28c22d7) }

var fileDescriptor_dc711c54c28c22d7 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x6a, 0xf2, 0x40,
	0x14, 0xc5, 0x1d, 0x4d, 0xf2, 0x25, 0x57, 0x3f, 0x08, 0x53, 0x28, 0x83, 0x2b, 0x9b, 0x45, 0x11,
	0x17, 0x59, 0xd8, 0xbe, 0x81, 0x14, 0x0a, 0xb5, 0x2d, 0x0c, 0xf5, 0x01, 0xa6, 0xce, 0x25, 0x08,
	0x8e, 0x89, 0x73, 0x13, 0x8a, 0x2f, 0xd1, 0x67, 0x2e, 0x33, 0x66, 0xaa, 0x8b, 0xee, 0xce, 0x39,
	0xb9, 0x7f, 0x7e, 0xb9, 0x03, 0x29, 0x51, 0xd9, 0xd8, 0xba, 0xad, 0xf9, 0x90, 0xa8, 0xf8, 0x66,
	0x90, 0x3c, 0xa3, 0xd2, 0x68, 0x79, 0x0e, 0xa3, 0xad, 0xd1, 0x82, 0xcd, 0xd8, 0x3c, 0x93, 0x4e,
	0xba, 0xa4, 0xdb, 0x69, 0x31, 0x3c, 0x27, 0xdd, 0x4e, 0x73, 0x01, 0xff, 0x0c, 0x55, 0x1f, 0xa7,
	0x06, 0xc5, 0x68, 0xc6, 0xe6, 0xb1, 0x0c, 0xd6, 0xd5, 0x12, 0x1e, 0x45, 0xe4, 0x53, 0x27, 0xf9,
	0x14, 0xd2, 0x8e, 0xd0, 0x6a, 0xd5, 0x2a, 0x11, 0xfb, 0xf8, 0xd7, 0xbb, 0x39, 0x8d, 0x3a, 0xed,
	0x6b, 0xa5, 0xc5, 0x78, 0xc6, 0xe6, 0x13, 0x19, 0x6c, 0xf1, 0x08, 0xe9, 0xba, 0xae, 0x76, 0x07,
	0x89, 0xc7, 0xb0, 0x9f, 0x5d, 0xf6, 0xdf, 0x42, 0xd2, 0x28, 0xa2, 0xaf, 0x00, 0xd5, 0xbb, 0xa2,
	0x84, 0x44, 0x22, 0x75, 0xfb, 0x96, 0x73, 0x88, 0xb6, 0xb5, 0x46, 0xdf, 0x14, 0x4b, 0xaf, 0xdd,
	0x1c, 0x43, 0x55, 0xf8, 0x0f, 0x43, 0x55, 0x61, 0x20, 0xeb, 0xb7, 0x50, 0xc3, 0x0b, 0x48, 0xac,
	0x6f, 0xf6, 0x4d, 0xe3, 0x25, 0x94, 0x44, 0xe5, 0x79, 0x9c, 0xec, 0xbf, 0xfc, 0x71, 0x8a, 0x0b,
	0xca, 0xe8, 0x1a, 0xc5, 0x01, 0x1c, 0x94, 0x41, 0x7f, 0x89, 0x4c, 0x7a, 0xbd, 0xb8, 0x03, 0x78,
	0x45, 0x22, 0x55, 0xe1, 0xca, 0x68, 0x9e, 0x42, 0xf4, 0xb6, 0x59, 0xaf, 0xf3, 0x01, 0xcf, 0x20,
	0xf6, 0x18, 0x39, 0x5b, 0xdc, 0x40, 0xf6, 0x64, 0x6d, 0x6d, 0x57, 0x0e, 0x38, 0x81, 0xe1, 0xfb,
	0x4b, 0x3e, 0x58, 0x96, 0x10, 0x6d, 0x08, 0x2d, 0xbf, 0xef, 0xeb, 0xf8, 0xc4, 0xa1, 0x85, 0xfb,
	0x4c, 0xff, 0x5f, 0x39, 0x6a, 0x8a, 0xc1, 0x67, 0xe2, 0x1f, 0xf6, 0xe1, 0x27, 0x00, 0x00, 0xff,
	0xff, 0xd1, 0xd7, 0x97, 0xef, 0xe4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	// Sends a Login
	Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	out := new(LoginResp)
	err := c.cc.Invoke(ctx, "/ss.User/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	// Sends a Login
	Login(context.Context, *LoginReq) (*LoginResp, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Login(ctx context.Context, req *LoginReq) (*LoginResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ss.User/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Login(ctx, req.(*LoginReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ss.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _User_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ss.proto",
}
